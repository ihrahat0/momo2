{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/workbox-core/_version.js","../node_modules/workbox-precaching/_version.js","../node_modules/workbox-expiration/node_modules/workbox-core/_version.js","../node_modules/workbox-strategies/node_modules/workbox-core/_version.js","../node_modules/workbox-routing/_version.js","../node_modules/workbox-strategies/_version.js","../node_modules/workbox-expiration/_version.js","../node_modules/workbox-precaching/node_modules/workbox-strategies/_version.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/workbox-core/models/messages/messageGenerator.js","../node_modules/workbox-core/_private/WorkboxError.js","../node_modules/workbox-core/_private/cacheNames.js","../node_modules/workbox-core/_private/logger.js","../node_modules/workbox-core/_private/waitUntil.js","../node_modules/workbox-precaching/utils/createCacheKey.js","../node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","../node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","../node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","../node_modules/workbox-core/copyResponse.js","../node_modules/workbox-core/_private/getFriendlyURL.js","../node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","../node_modules/workbox-core/_private/Deferred.js","../node_modules/workbox-core/models/quotaErrorCallbacks.js","../node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","../node_modules/workbox-core/_private/timeout.js","../node_modules/workbox-precaching/node_modules/workbox-strategies/StrategyHandler.js","../node_modules/workbox-precaching/node_modules/workbox-strategies/Strategy.js","../node_modules/workbox-precaching/PrecacheStrategy.js","../node_modules/workbox-precaching/PrecacheController.js","../node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","../node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../node_modules/workbox-routing/utils/constants.js","../node_modules/workbox-routing/utils/normalizeHandler.js","../node_modules/workbox-routing/Route.js","../node_modules/workbox-routing/RegExpRoute.js","../node_modules/workbox-routing/Router.js","../node_modules/workbox-routing/registerRoute.js","../node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","../node_modules/workbox-precaching/PrecacheRoute.js","../node_modules/workbox-precaching/utils/generateURLVariations.js","../node_modules/workbox-precaching/getCacheKeyForURL.js","../node_modules/workbox-precaching/matchPrecache.js","../node_modules/workbox-core/_private/DBWrapper.js","../node_modules/workbox-expiration/node_modules/workbox-core/models/messages/messageGenerator.js","../node_modules/workbox-expiration/node_modules/workbox-core/_private/WorkboxError.js","../node_modules/workbox-expiration/node_modules/workbox-core/_private/dontWaitFor.js","../node_modules/workbox-expiration/node_modules/workbox-core/_private/logger.js","../node_modules/workbox-expiration/node_modules/workbox-core/_private/DBWrapper.js","../node_modules/workbox-expiration/node_modules/workbox-core/_private/deleteDatabase.js","../node_modules/workbox-expiration/models/CacheTimestampsModel.js","../node_modules/workbox-expiration/CacheExpiration.js","../node_modules/workbox-expiration/node_modules/workbox-core/_private/cacheNames.js","../node_modules/workbox-expiration/node_modules/workbox-core/models/quotaErrorCallbacks.js","../node_modules/workbox-expiration/node_modules/workbox-core/registerQuotaErrorCallback.js","../node_modules/workbox-expiration/ExpirationPlugin.js","../node_modules/workbox-strategies/node_modules/workbox-core/models/messages/messageGenerator.js","../node_modules/workbox-strategies/node_modules/workbox-core/_private/WorkboxError.js","../node_modules/workbox-strategies/node_modules/workbox-core/_private/cacheNames.js","../node_modules/workbox-strategies/node_modules/workbox-core/models/quotaErrorCallbacks.js","../node_modules/workbox-strategies/node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","../node_modules/workbox-strategies/node_modules/workbox-core/_private/getFriendlyURL.js","../node_modules/workbox-strategies/node_modules/workbox-core/utils/pluginUtils.js","../node_modules/workbox-strategies/node_modules/workbox-core/_private/cacheWrapper.js","../node_modules/workbox-strategies/node_modules/workbox-core/_private/fetchWrapper.js","../node_modules/workbox-strategies/CacheFirst.js","../node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","utils/env.ts","serviceWorker/utils.ts","serviceWorker/document.ts","../node_modules/workbox-core/clientsClaim.js","serviceWorker/index.ts","../node_modules/workbox-precaching/precacheAndRoute.js","../node_modules/workbox-precaching/precache.js","../node_modules/workbox-precaching/addRoute.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","self","_","e","runtime","undefined","Op","hasOwn","obj","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","toString","from","test","_toConsumableArray","isArray","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","_slicedToArray","_arr","_n","_d","_e","_s","_i","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","_createForOfIteratorHelper","allowArrayLike","it","F","f","normalCompletion","didErr","step","_e2","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_setPrototypeOf","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","_typeof","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","Parent","Class","a","_cache","Map","indexOf","has","set","Wrapper","messageGenerator","code","msg","JSON","stringify","WorkboxError","errorCode","details","message","_cacheNameDetails","googleAnalytics","precache","prefix","suffix","registration","scope","_createCacheName","cacheName","join","cacheNames","userCacheName","logger","waitUntil","event","asyncFn","returnPromise","createCacheKey","cacheKey","urlObject","URL","location","href","url","revision","cacheKeyURL","originalURL","searchParams","supportStatus","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","request","originalRequest","cachedResponseWillBeUsed","cachedResponse","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","params","_precacheController","getCacheKeyForURL","Request","canConstructResponseFromBodyStream","testResponse","Response","body","copyResponse","response","modifier","origin","responseURL","clonedResponse","clone","responseInit","headers","Headers","status","statusText","modifiedResponseInit","blob","getFriendlyURL","String","replace","RegExp","stripParams","fullURL","ignoreParams","strippedURL","param","delete","cacheMatchIgnoreParams","cache","matchOptions","strippedRequestURL","match","keysOptions","ignoreSearch","cacheKeys","strippedCacheKeyURL","Deferred","promise","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","process","callback","timeout","ms","setTimeout","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","assign","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","FetchEvent","preloadResponse","possiblePreloadResponse","hasCallback","iterateCallbacks","cb","thrownError","pluginFilteredRequest","fetch","fetchOptions","fetchResponse","runCallbacks","responseClone","cachePut","getCacheKey","effectiveRequest","multiMatchOptions","caches","_ensureResponseSafeToCache","responseToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","statefulCallback","statefulParam","shift","pluginsUsed","Strategy","handleAll","handler","responseDone","_getResponse","_awaitComplete","_handle","doneWaiting","destroy","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","cacheMatch","_handleInstall","_handleFetch","groupCollapsed","log","groupEnd","_useDefaultCacheabilityPluginIfNeeded","defaultPluginIndex","cacheWillUpdatePluginCount","entries","index","defaultPrecacheCacheabilityPlugin","cacheWillUpdate","splice","redirected","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","activate","addToCacheList","_installAndActiveListenersAdded","addEventListener","urlsToWarnAbout","cacheMode","firstEntry","secondEntry","integrity","warningMessage","console","warn","installReportPlugin","credentials","all","currentlyCachedRequests","expectedCacheKeys","deletedURLs","getOrCreatePrecacheController","defaultRouter","defaultMethod","normalizeHandler","Route","catchHandler","RegExpRoute","regExp","exec","Router","_routes","_defaultHandlerMap","responsePromise","handleRequest","respondWith","data","payload","requestPromises","urlsToCache","map","ports","postMessage","protocol","startsWith","sameOrigin","findMatchingRoute","route","_catchHandler","catch","matchResult","routeIndex","getOrCreateDefaultRouter","addFetchListener","addCacheListener","registerRoute","capture","captureUrl","moduleName","funcName","paramName","removeIgnoredSearchParams","ignoreURLParametersMatching","some","PrecacheRoute","urlsToCacheKeys","getURLsToCacheKeys","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","generateURLVariations","possibleURL","matchPrecache","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","openRequestTimedOut","OPEN_TIMEOUT","openRequest","indexedDB","onerror","evt","transaction","abort","onsuccess","db","storeName","query","getAllKeys","count","getAllMatching","includeKeys","direction","txn","store","objectStore","results","openCursor","cursor","continue","storeNames","onabort","oncomplete","objStore","IDBObjectStore","_call","readonly","readwrite","dontWaitFor","deleteDatabase","onblocked","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","CacheTimestampsModel","_cacheName","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","timestamp","id","_getId","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","CacheExpiration","config","_isRunning","_rerunRequested","_maxEntries","maxEntries","_maxAgeSeconds","maxAgeSeconds","_timestampModel","now","expireEntries","urlsExpired","setTimestamp","getTimestamp","expireOlderThan","Infinity","registerQuotaErrorCallback","add","ExpirationPlugin","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","updateTimestamp","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","headerTime","getTime","pluginUtils","callbackName","_getEffectiveRequest","cacheKeyWillBeUsedPlugins","_isResponseSafeToCache","pluginMethod","matchWrapper","putWrapper","updatePlugins","cacheWrapper","wrappedFetch","failedFetchPlugins","requestClone","fetchWrapper","CacheFirst","_fetchOptions","_matchOptions","_getFromNetwork","cachePutPromise","isAppUniswapOrg","hostname","toURL","fileExtensionRegexp","DOCUMENT","matchDocument","Boolean","handleDocument","navigator","onLine","offlineDocument","requestUrl","controller","AbortController","signal","CachedDocument","etag","cachedEtag","DocumentRoute","text","init","clients","claim","skipWaiting","__WB_MANIFEST","reduce","assets","includes","addRoute"],"mappings":"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","file":"service-worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"regenerator-runtime\");\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.1.5'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.1.5'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.4'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.4'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.1.5'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:5.1.4'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:5.1.4'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.1.5'] && _();\n}\ncatch (e) { }\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                // TODO: `state` should never be undefined...\n                const url = state.originalRequest.url;\n                if (cachedResponse) {\n                    this.notUpdatedURLs.push(url);\n                }\n                else {\n                    this.updatedURLs.push(url);\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            const cacheKey = params && params.cacheKey ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            return cacheKey ? new Request(cacheKey) : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = { ...matchOptions, ignoreSearch: true };\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return (typeof input === 'string') ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * [handle()]{@link module:workbox-strategies.Strategy~handle} or\n * [handleAll()]{@link module:workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof module:workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {module:workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     *     [match callback]{@link module:workbox-routing~matchCallback},\n     *     (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * [match callback]{@link module:workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = await event.preloadResponse;\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail') ?\n            request.clone() : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            throw new WorkboxError('plugin-error-request-will-fetch', {\n                thrownError: err,\n            });\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ?\n                undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = { ...matchOptions, ...{ cacheName } };\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse = (await callback({\n                cacheName,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n                event: this.event,\n            })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback ? await cacheMatchIgnoreParams(\n        // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n        // feature. Consider into ways to only add this behavior if using\n        // precaching.\n        cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions) :\n            null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ?\n                responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n            if (error.name === 'QuotaExceededError') {\n                await executeQuotaErrorCallbacks();\n            }\n            throw error;\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        if (!this._cacheKeys[mode]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    params: this.params,\n                }));\n            }\n            this._cacheKeys[mode] = effectiveRequest;\n        }\n        return this._cacheKeys[mode];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * [`iterateCallbacks()`]{@link module:workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = { ...param, state };\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * [`doneWaiting()`]{@link module:workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * [`waitUntil()`]{@link module:workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while (promise = this._extendLifetimePromises.shift()) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve();\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache = (await callback({\n                request: this.request,\n                response: responseToCache,\n                event: this.event,\n            })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof module:workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * [workbox-core]{@link module:workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * [route]{@link module:workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to [`handle()`]{@link module:workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of [response, done] promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string' ?\n            new Request(options.request) :\n            options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                response = await callback({ error, event, request });\n                if (response) {\n                    break;\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            error = waitUntilError;\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the [`handler`]{@link module:workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {module:workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof module:workbox-strategies.Strategy\n */\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A [Strategy]{@link module:workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork = options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (!response) {\n            // If this is an `install` event then populate the cache. If this is a\n            // `fetch` event (or any other event) then respond with the cached\n            // response.\n            if (handler.event && handler.event.type === 'install') {\n                return await this._handleInstall(request, handler);\n            }\n            return await this._handleFetch(request, handler);\n        }\n        return response;\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        // Fall back to the network if we don't have a cached response\n        // (perhaps due to manual cache cleanup).\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network instead.`);\n            }\n            response = await handler.fetch(request);\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = handler.params && handler.params.cacheKey ||\n                await handler.getCacheKey(request, 'read');\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` +\n                getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey.url)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    }\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    }\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {module:workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = { cacheKey, ...options.params };\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {module:workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise && (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        err = catchErr;\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do. \n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of [Route]{@link module:workbox-routing.Route} that takes a\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof module:workbox-precaching\n * @extends module:workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    return { cacheKey };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Takes in a URL, and returns the corresponding URL that could be used to\n * lookup the entry in the precache.\n *\n * If a relative URL is provided, the location of the service worker file will\n * be used as the base.\n *\n * For precached entries without revision information, the cache key will be the\n * same as the original URL.\n *\n * For precached entries with revision information, the cache key will be the\n * original URL with the addition of a query parameter used for keeping track of\n * the revision info.\n *\n * @param {string} url The URL whose cache key to look up.\n * @return {string} The cache key that corresponds to that URL.\n *\n * @memberof module:workbox-precaching\n */\nfunction getCacheKeyForURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.getCacheKeyForURL(url);\n}\nexport { getCacheKeyForURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof module:workbox-precaching\n */\nfunction matchPrecache(request) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.matchPrecache(request);\n}\nexport { matchPrecache };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n                // TODO: Assert is positive\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n                // TODO: Assert is positive\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in the Workbox APIs to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the used Cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (const plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    const responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    const oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (const plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (const plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    const pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheFirst',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await this._getFromNetwork(request, event);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * Handles the network and cache part of CacheFirst.\n     *\n     * @param {Request} request\n     * @param {Event} [event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork(request, event) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        // Keep the service worker while we put the request to the cache\n        const responseClone = response.clone();\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: responseClone,\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","export function isDevelopmentEnv(): boolean {\r\n  return process.env.NODE_ENV === 'development'\r\n}\r\n\r\nexport function isTestEnv(): boolean {\r\n  return process.env.NODE_ENV === 'test'\r\n}\r\n\r\nexport function isStagingEnv(): boolean {\r\n  // This is set in vercel builds.\r\n  return Boolean(process.env.REACT_APP_STAGING)\r\n}\r\n\r\nexport function isProductionEnv(): boolean {\r\n  return process.env.NODE_ENV === 'production' && !isStagingEnv()\r\n}\r\n\r\nexport function isAppUniswapOrg({ hostname }: { hostname: string }): boolean {\r\n  return hostname === 'app.uniswap.org'\r\n}\r\n\r\nexport function isSentryEnabled(): boolean {\r\n  // Disable in e2e test environments\r\n  if (isStagingEnv() || (isProductionEnv() && !isAppUniswapOrg(window.location))) return false\r\n  return process.env.REACT_APP_SENTRY_ENABLED === 'true'\r\n}\r\n\r\nexport function getEnvName(): 'production' | 'staging' | 'development' {\r\n  if (isStagingEnv()) {\r\n    return 'staging'\r\n  }\r\n  if (isProductionEnv()) {\r\n    return 'production'\r\n  }\r\n  return 'development'\r\n}\r\n","/// <reference lib=\"webworker\" />\r\n\r\nimport { PrecacheEntry } from 'workbox-precaching/_types'\r\n\r\ndeclare const self: ServiceWorkerGlobalScope\r\n\r\nexport function isDevelopment() {\r\n  return Boolean(\r\n    self.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address\r\n      self.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4\r\n      self.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/) ||\r\n      // vercel previews\r\n      self.location.hostname.endsWith('.vercel.app')\r\n  )\r\n}\r\n\r\nexport function toURL(entry: string | PrecacheEntry): string {\r\n  return typeof entry === 'string' ? entry : entry.url\r\n}\r\n","import { isAppUniswapOrg } from 'utils/env'\r\nimport { RouteHandlerCallbackOptions, RouteMatchCallbackOptions } from 'workbox-core'\r\nimport { getCacheKeyForURL, matchPrecache } from 'workbox-precaching'\r\nimport { Route } from 'workbox-routing'\r\n\r\nimport { isDevelopment } from './utils'\r\n\r\nconst fileExtensionRegexp = new RegExp('/[^/?]+\\\\.[^/]+$')\r\nconst DOCUMENT = process.env.PUBLIC_URL + '/index.html'\r\n\r\n/**\r\n * Matches with App Shell-style routing, so that navigation requests are fulfilled with an index.html shell.\r\n * See https://developers.google.com/web/fundamentals/architecture/app-shell\r\n */\r\nexport function matchDocument({ request, url }: RouteMatchCallbackOptions) {\r\n  // If this isn't a navigation, skip.\r\n  if (request.mode !== 'navigate') {\r\n    return false\r\n  }\r\n\r\n  // If this looks like a resource (ie has a file extension), skip.\r\n  if (url.pathname.match(fileExtensionRegexp)) {\r\n    return false\r\n  }\r\n\r\n  // If this isn't app.uniswap.org (or a local build), skip.\r\n  // IPFS gateways may not have domain separation, so they cannot use document caching.\r\n  if (!isAppUniswapOrg(url) && !isDevelopment()) {\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\ntype HandlerContext = {\r\n  offlineDocument?: Response\r\n} | void\r\n\r\n/**\r\n * The returned document should always be fresh, so this handler uses a custom strategy:\r\n *\r\n * - Always fetches the document.\r\n * - When available, compares the etag headers of the fetched and cached documents:\r\n *   - If matching (fresh) or missing (offline), returns the cached document.\r\n *   - If not matching (stale), returns the fetched document.\r\n *\r\n * This ensures that the user will always see the latest document. It requires a network fetch to check the cached\r\n * document's freshness, but does not require a full fetch in most cases, so it still saves time. This is identical to\r\n * the browser's builtin etag strategy, reimplemented in the ServiceWorker.\r\n *\r\n * In addition, this handler may serve an offline document if there is no internet connection.\r\n */\r\nexport async function handleDocument(this: HandlerContext, { request }: RouteHandlerCallbackOptions) {\r\n  // If we are offline, serve the offline document.\r\n  if ('onLine' in navigator && !navigator.onLine) return this?.offlineDocument?.clone() || fetch(request)\r\n\r\n  // The exact cache key should be used for requests, as etags will be different for different paths.\r\n  // This also prevents usage of preloadResponse.\r\n  const requestUrl = getCacheKeyForURL(DOCUMENT)\r\n  const cachedResponse = await matchPrecache(DOCUMENT)\r\n\r\n  // Responses will throw if offline, but if cached the cached response should still be returned.\r\n  const controller = new AbortController()\r\n  let response\r\n  try {\r\n    response = await fetch(requestUrl || DOCUMENT, { cache: 'reload', signal: controller.signal })\r\n    if (!cachedResponse) {\r\n      return new Response(response.body, response)\r\n    }\r\n  } catch (e) {\r\n    if (!cachedResponse) throw e\r\n    return CachedDocument.from(cachedResponse)\r\n  }\r\n\r\n  // The etag header can be queried before the entire response body has streamed, so it is still a\r\n  // performant cache key.\r\n  const etag = response?.headers.get('etag')\r\n  const cachedEtag = cachedResponse?.headers.get('etag')\r\n  if (etag && etag === cachedEtag) {\r\n    // If the cache is still fresh, cancel the pending response.\r\n    controller.abort()\r\n    return CachedDocument.from(cachedResponse)\r\n  }\r\n\r\n  return new Response(response.body, response)\r\n}\r\n\r\nexport class DocumentRoute extends Route {\r\n  constructor(offlineDocument?: Response) {\r\n    super(matchDocument, handleDocument.bind({ offlineDocument }), 'GET')\r\n  }\r\n}\r\n\r\n/**\r\n * A cache-specific version of the document.\r\n * This document sets the local `__isDocumentCached` variable to true.\r\n */\r\nexport class CachedDocument extends Response {\r\n  static async from(response: Response) {\r\n    const text = await response.text()\r\n\r\n    // Set the content-type explicitly. Some browsers (Android 12; Chrome 91) use an invalid content-type header.\r\n    const headers = new Headers(response.headers)\r\n    headers.set('Content-Type', 'text/html; charset=utf-8')\r\n    const init = { ...response, headers }\r\n\r\n    // Injects a marker into the document so that client code knows it was served from cache.\r\n    // The marker should be injected immediately in the <body> so it is available to client code.\r\n    return new CachedDocument(text.replace('<body>', '<body><script>window.__isDocumentCached=true</script>'), init)\r\n  }\r\n\r\n  private constructor(text: string, response: Response) {\r\n    super(text, response)\r\n  }\r\n}\r\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","import 'workbox-precaching' // defines __WB_MANIFEST\r\n\r\nimport { clientsClaim } from 'workbox-core'\r\nimport { ExpirationPlugin } from 'workbox-expiration'\r\nimport { precacheAndRoute } from 'workbox-precaching'\r\nimport { PrecacheEntry } from 'workbox-precaching/_types'\r\nimport { registerRoute, Route } from 'workbox-routing'\r\nimport { CacheFirst } from 'workbox-strategies'\r\n\r\nimport { DocumentRoute } from './document'\r\nimport { toURL } from './utils'\r\n\r\ndeclare const self: ServiceWorkerGlobalScope\r\n\r\nclientsClaim()\r\nself.skipWaiting()\r\n\r\n// Registers the document route for the precached document.\r\n// This must be done before setting up workbox-precaching, so that it takes precedence.\r\nregisterRoute(new DocumentRoute())\r\n\r\n// Splits entries into assets, which are loaded on-demand; and entries, which are precached.\r\n// Effectively, this precaches the document, and caches all other assets on-demand.\r\nconst { assets, entries } = self.__WB_MANIFEST.reduce<{ assets: string[]; entries: PrecacheEntry[] }>(\r\n  ({ assets, entries }, entry) => {\r\n    if (typeof entry === 'string') {\r\n      return { entries, assets: [...assets, entry] }\r\n    } else if (entry.revision) {\r\n      return { entries: [...entries, entry], assets }\r\n    } else {\r\n      return { entries, assets: [...assets, toURL(entry)] }\r\n    }\r\n  },\r\n  { assets: [], entries: [] }\r\n)\r\n\r\n// Registers the assets' routes for on-demand caching.\r\nregisterRoute(\r\n  new Route(\r\n    ({ url }) => assets.includes('.' + url.pathname),\r\n    new CacheFirst({\r\n      cacheName: 'assets',\r\n      plugins: [new ExpirationPlugin({ maxEntries: 16 })],\r\n    })\r\n  )\r\n)\r\n\r\n// Precaches entries and registers a default route to serve them.\r\nprecacheAndRoute(entries)\r\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [PrecacheRoute options]{@link module:workbox-precaching.PrecacheRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See\n * [PrecacheRoute options]{@link module:workbox-precaching.PrecacheRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n"],"sourceRoot":""}